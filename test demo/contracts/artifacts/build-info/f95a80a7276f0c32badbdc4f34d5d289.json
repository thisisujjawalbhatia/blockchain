{
	"id": "f95a80a7276f0c32badbdc4f34d5d289",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/test2.sol": {
				"content": "pragma solidity ^0.4.24;\r\ncontract BytesContract{\r\n    bytes1 aa = 0x65;\r\n    bytes1 bb = bytes1(uint8(10));\r\n    bytes2 cc = bytes2(uint16(256));\r\n    bytes1 dd = 'a';\r\n    bytes1 ff ;\r\n\r\n    function getintff() public returns (bytes1){\r\n        return ff; //returns 0x00\r\n    }\r\n    function getintaa() public returns (uint){\r\n        return uint8(aa); // returns 101   \r\n    }\r\n    function getbyteaa() public returns (bytes1){\r\n        return aa;// returns 0x65\r\n    }\r\n\r\n    function getbytebb() public returns (bytes1){\r\n        return bb ;\r\n    }\r\n    function getintbb() public returns (uint){\r\n        return uint8(bb); //returns 10\r\n    }\r\n    function getbytecc() public returns (bytes2){\r\n        return cc ;\r\n    }\r\n    function getintcc() public returns (uint){\r\n        return uint16(cc); //returns 256\r\n    }\r\n    function getbytedd() public returns (bytes2){\r\n        return dd ;\r\n    }\r\n    function getintdd() public returns (uint){\r\n        return uint8(dd); //returns 97\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/test2.sol": {
				"BytesContract": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "getbytecc",
							"outputs": [
								{
									"name": "",
									"type": "bytes2"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getintaa",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getintdd",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getintcc",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getbytebb",
							"outputs": [
								{
									"name": "",
									"type": "bytes1"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getbytedd",
							"outputs": [
								{
									"name": "",
									"type": "bytes2"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getbyteaa",
							"outputs": [
								{
									"name": "",
									"type": "bytes1"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getintbb",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getintff",
							"outputs": [
								{
									"name": "",
									"type": "bytes1"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/test2.sol\":26:1001  contract BytesContract{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/test2.sol\":67:71  0x65 */\n  0x65\n    /* \"contracts/test2.sol\":55:71  bytes1 aa = 0x65 */\n  0x100000000000000000000000000000000000000000000000000000000000000\n  mul\n  0x0\n  dup1\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x100000000000000000000000000000000000000000000000000000000000000\n  swap1\n  div\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/test2.sol\":103:105  10 */\n  0xa\n    /* \"contracts/test2.sol\":90:107  bytes1(uint8(10)) */\n  0x100000000000000000000000000000000000000000000000000000000000000\n  mul\n    /* \"contracts/test2.sol\":78:107  bytes1 bb = bytes1(uint8(10)) */\n  0x0\n  exp(0x100, 0x1)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x100000000000000000000000000000000000000000000000000000000000000\n  swap1\n  div\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/test2.sol\":140:143  256 */\n  0x100\n    /* \"contracts/test2.sol\":126:145  bytes2(uint16(256)) */\n  0x1000000000000000000000000000000000000000000000000000000000000\n  mul\n    /* \"contracts/test2.sol\":114:145  bytes2 cc = bytes2(uint16(256)) */\n  0x0\n  exp(0x100, 0x2)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x1000000000000000000000000000000000000000000000000000000000000\n  swap1\n  div\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/test2.sol\":152:167  bytes1 dd = 'a' */\n  0x6100000000000000000000000000000000000000000000000000000000000000\n  0x0\n  exp(0x100, 0x4)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x100000000000000000000000000000000000000000000000000000000000000\n  swap1\n  div\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/test2.sol\":26:1001  contract BytesContract{\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/test2.sol\":26:1001  contract BytesContract{\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/test2.sol\":26:1001  contract BytesContract{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6618605\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x13a9ca12\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3b255757\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5dd9d8a7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7f38a19e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd333f46b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe64d77c6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe9c66ccf\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xff14b941\n      eq\n      tag_10\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/test2.sol\":654:727  function getbytecc() public returns (bytes2){\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"contracts/test2.sol\":654:727  function getbytecc() public returns (bytes2){\r... */\n      pop\n      tag_12\n      jump(tag_13)\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test2.sol\":285:379  function getintaa() public returns (uint){\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"contracts/test2.sol\":285:379  function getintaa() public returns (uint){\r... */\n      pop\n      tag_15\n      jump(tag_16)\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test2.sol\":909:998  function getintdd() public returns (uint){\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_17:\n        /* \"contracts/test2.sol\":909:998  function getintdd() public returns (uint){\r... */\n      pop\n      tag_18\n      jump(tag_19)\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test2.sol\":733:824  function getintcc() public returns (uint){\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"contracts/test2.sol\":733:824  function getintcc() public returns (uint){\r... */\n      pop\n      tag_21\n      jump(tag_22)\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test2.sol\":480:553  function getbytebb() public returns (bytes1){\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"contracts/test2.sol\":480:553  function getbytebb() public returns (bytes1){\r... */\n      pop\n      tag_24\n      jump(tag_25)\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test2.sol\":830:903  function getbytedd() public returns (bytes2){\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_26:\n        /* \"contracts/test2.sol\":830:903  function getbytedd() public returns (bytes2){\r... */\n      pop\n      tag_27\n      jump(tag_28)\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test2.sol\":385:472  function getbyteaa() public returns (bytes1){\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_29:\n        /* \"contracts/test2.sol\":385:472  function getbyteaa() public returns (bytes1){\r... */\n      pop\n      tag_30\n      jump(tag_31)\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test2.sol\":559:648  function getintbb() public returns (uint){\r... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"contracts/test2.sol\":559:648  function getintbb() public returns (uint){\r... */\n      pop\n      tag_33\n      jump(tag_34)\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test2.sol\":193:279  function getintff() public returns (bytes1){\r... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"contracts/test2.sol\":193:279  function getintff() public returns (bytes1){\r... */\n      pop\n      tag_36\n      jump(tag_37)\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/test2.sol\":654:727  function getbytecc() public returns (bytes2){\r... */\n    tag_13:\n        /* \"contracts/test2.sol\":691:697  bytes2 */\n      0x0\n        /* \"contracts/test2.sol\":716:718  cc */\n      dup1\n      0x2\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0x1000000000000000000000000000000000000000000000000000000000000\n      mul\n        /* \"contracts/test2.sol\":709:718  return cc */\n      swap1\n      pop\n        /* \"contracts/test2.sol\":654:727  function getbytecc() public returns (bytes2){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/test2.sol\":285:379  function getintaa() public returns (uint){\r... */\n    tag_16:\n        /* \"contracts/test2.sol\":321:325  uint */\n      0x0\n        /* \"contracts/test2.sol\":350:352  aa */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0x100000000000000000000000000000000000000000000000000000000000000\n      mul\n        /* \"contracts/test2.sol\":344:353  uint8(aa) */\n      0x100000000000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n        /* \"contracts/test2.sol\":337:353  return uint8(aa) */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/test2.sol\":285:379  function getintaa() public returns (uint){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/test2.sol\":909:998  function getintdd() public returns (uint){\r... */\n    tag_19:\n        /* \"contracts/test2.sol\":945:949  uint */\n      0x0\n        /* \"contracts/test2.sol\":974:976  dd */\n      dup1\n      0x4\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0x100000000000000000000000000000000000000000000000000000000000000\n      mul\n        /* \"contracts/test2.sol\":968:977  uint8(dd) */\n      0x100000000000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n        /* \"contracts/test2.sol\":961:977  return uint8(dd) */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/test2.sol\":909:998  function getintdd() public returns (uint){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/test2.sol\":733:824  function getintcc() public returns (uint){\r... */\n    tag_22:\n        /* \"contracts/test2.sol\":769:773  uint */\n      0x0\n        /* \"contracts/test2.sol\":799:801  cc */\n      dup1\n      0x2\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0x1000000000000000000000000000000000000000000000000000000000000\n      mul\n        /* \"contracts/test2.sol\":792:802  uint16(cc) */\n      0x1000000000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n        /* \"contracts/test2.sol\":785:802  return uint16(cc) */\n      0xffff\n      and\n      swap1\n      pop\n        /* \"contracts/test2.sol\":733:824  function getintcc() public returns (uint){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/test2.sol\":480:553  function getbytebb() public returns (bytes1){\r... */\n    tag_25:\n        /* \"contracts/test2.sol\":517:523  bytes1 */\n      0x0\n        /* \"contracts/test2.sol\":542:544  bb */\n      dup1\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0x100000000000000000000000000000000000000000000000000000000000000\n      mul\n        /* \"contracts/test2.sol\":535:544  return bb */\n      swap1\n      pop\n        /* \"contracts/test2.sol\":480:553  function getbytebb() public returns (bytes1){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/test2.sol\":830:903  function getbytedd() public returns (bytes2){\r... */\n    tag_28:\n        /* \"contracts/test2.sol\":867:873  bytes2 */\n      0x0\n        /* \"contracts/test2.sol\":892:894  dd */\n      dup1\n      0x4\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0x100000000000000000000000000000000000000000000000000000000000000\n      mul\n        /* \"contracts/test2.sol\":885:894  return dd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      pop\n        /* \"contracts/test2.sol\":830:903  function getbytedd() public returns (bytes2){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/test2.sol\":385:472  function getbyteaa() public returns (bytes1){\r... */\n    tag_31:\n        /* \"contracts/test2.sol\":422:428  bytes1 */\n      0x0\n        /* \"contracts/test2.sol\":447:449  aa */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0x100000000000000000000000000000000000000000000000000000000000000\n      mul\n        /* \"contracts/test2.sol\":440:449  return aa */\n      swap1\n      pop\n        /* \"contracts/test2.sol\":385:472  function getbyteaa() public returns (bytes1){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/test2.sol\":559:648  function getintbb() public returns (uint){\r... */\n    tag_34:\n        /* \"contracts/test2.sol\":595:599  uint */\n      0x0\n        /* \"contracts/test2.sol\":624:626  bb */\n      dup1\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0x100000000000000000000000000000000000000000000000000000000000000\n      mul\n        /* \"contracts/test2.sol\":618:627  uint8(bb) */\n      0x100000000000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n        /* \"contracts/test2.sol\":611:627  return uint8(bb) */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/test2.sol\":559:648  function getintbb() public returns (uint){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/test2.sol\":193:279  function getintff() public returns (bytes1){\r... */\n    tag_37:\n        /* \"contracts/test2.sol\":229:235  bytes1 */\n      0x0\n        /* \"contracts/test2.sol\":254:256  ff */\n      dup1\n      0x5\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0x100000000000000000000000000000000000000000000000000000000000000\n      mul\n        /* \"contracts/test2.sol\":247:256  return ff */\n      swap1\n      pop\n        /* \"contracts/test2.sol\":193:279  function getintff() public returns (bytes1){\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582043e5d29c1c1ebc97e5aff4123d8f1af1df7f96d1df56e6329b9e10b7407470910029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260657f0100000000000000000000000000000000000000000000000000000000000000026000806101000a81548160ff02191690837f010000000000000000000000000000000000000000000000000000000000000090040217905550600a7f010000000000000000000000000000000000000000000000000000000000000002600060016101000a81548160ff02191690837f0100000000000000000000000000000000000000000000000000000000000000900402179055506101007e0100000000000000000000000000000000000000000000000000000000000002600060026101000a81548161ffff02191690837e01000000000000000000000000000000000000000000000000000000000000900402179055507f6100000000000000000000000000000000000000000000000000000000000000600060046101000a81548160ff02191690837f01000000000000000000000000000000000000000000000000000000000000009004021790555034801561018457600080fd5b50610632806101946000396000f300608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063066186051461009e57806313a9ca121461010b5780633b255757146101365780635dd9d8a7146101615780637f38a19e1461018c578063d333f46b146101fb578063e64d77c614610268578063e9c66ccf146102d7578063ff14b94114610302575b600080fd5b3480156100aa57600080fd5b506100b3610371565b60405180827dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561011757600080fd5b506101206103a5565b6040518082815260200191505060405180910390f35b34801561014257600080fd5b5061014b610400565b6040518082815260200191505060405180910390f35b34801561016d57600080fd5b5061017661045b565b6040518082815260200191505060405180910390f35b34801561019857600080fd5b506101a16104b5565b60405180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561020757600080fd5b506102106104ea565b60405180827dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561027457600080fd5b5061027d610541565b60405180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b3480156102e357600080fd5b506102ec610576565b6040518082815260200191505060405180910390f35b34801561030e57600080fd5b506103176105d1565b60405180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b60008060029054906101000a90047e0100000000000000000000000000000000000000000000000000000000000002905090565b60008060009054906101000a90047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff16905090565b60008060049054906101000a90047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff16905090565b60008060029054906101000a90047e01000000000000000000000000000000000000000000000000000000000000027e01000000000000000000000000000000000000000000000000000000000000900461ffff16905090565b60008060019054906101000a90047f010000000000000000000000000000000000000000000000000000000000000002905090565b60008060049054906101000a90047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916905090565b60008060009054906101000a90047f010000000000000000000000000000000000000000000000000000000000000002905090565b60008060019054906101000a90047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff16905090565b60008060059054906101000a90047f0100000000000000000000000000000000000000000000000000000000000000029050905600a165627a7a7230582043e5d29c1c1ebc97e5aff4123d8f1af1df7f96d1df56e6329b9e10b7407470910029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x65 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV MUL OR SWAP1 SSTORE POP PUSH2 0x100 PUSH31 0x1000000000000000000000000000000000000000000000000000000000000 MUL PUSH1 0x0 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH31 0x1000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV MUL OR SWAP1 SSTORE POP PUSH32 0x6100000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 DUP1 PUSH2 0x194 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6618605 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x13A9CA12 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x3B255757 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x5DD9D8A7 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x7F38A19E EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xD333F46B EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xE64D77C6 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xE9C66CCF EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xFF14B941 EQ PUSH2 0x302 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A1 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH31 0x1000000000000000000000000000000000000000000000000000000000000 MUL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH31 0x1000000000000000000000000000000000000000000000000000000000000 MUL PUSH31 0x1000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL SWAP1 POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 NUMBER 0xe5 0xd2 SWAP13 SHR 0x1e 0xbc SWAP8 0xe5 0xaf DELEGATECALL SLT RETURNDATASIZE DUP16 BYTE CALL 0xdf PUSH32 0x96D1DF56E6329B9E10B740747091002900000000000000000000000000000000 ",
							"sourceMap": "26:975:0:-;;;67:4;55:16;;;;;;;;;;;;;;;;;;;;;;;103:2;90:17;;78:29;;;;;;;;;;;;;;;;;;;;;140:3;126:19;;114:31;;;;;;;;;;;;;;;;;;;;;152:15;;;;;;;;;;;;;;;;;;;;;;26:975;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:975:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063066186051461009e57806313a9ca121461010b5780633b255757146101365780635dd9d8a7146101615780637f38a19e1461018c578063d333f46b146101fb578063e64d77c614610268578063e9c66ccf146102d7578063ff14b94114610302575b600080fd5b3480156100aa57600080fd5b506100b3610371565b60405180827dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561011757600080fd5b506101206103a5565b6040518082815260200191505060405180910390f35b34801561014257600080fd5b5061014b610400565b6040518082815260200191505060405180910390f35b34801561016d57600080fd5b5061017661045b565b6040518082815260200191505060405180910390f35b34801561019857600080fd5b506101a16104b5565b60405180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561020757600080fd5b506102106104ea565b60405180827dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561027457600080fd5b5061027d610541565b60405180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b3480156102e357600080fd5b506102ec610576565b6040518082815260200191505060405180910390f35b34801561030e57600080fd5b506103176105d1565b60405180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b60008060029054906101000a90047e0100000000000000000000000000000000000000000000000000000000000002905090565b60008060009054906101000a90047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff16905090565b60008060049054906101000a90047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff16905090565b60008060029054906101000a90047e01000000000000000000000000000000000000000000000000000000000000027e01000000000000000000000000000000000000000000000000000000000000900461ffff16905090565b60008060019054906101000a90047f010000000000000000000000000000000000000000000000000000000000000002905090565b60008060049054906101000a90047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916905090565b60008060009054906101000a90047f010000000000000000000000000000000000000000000000000000000000000002905090565b60008060019054906101000a90047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff16905090565b60008060059054906101000a90047f0100000000000000000000000000000000000000000000000000000000000000029050905600a165627a7a7230582043e5d29c1c1ebc97e5aff4123d8f1af1df7f96d1df56e6329b9e10b7407470910029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6618605 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x13A9CA12 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x3B255757 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x5DD9D8A7 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x7F38A19E EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xD333F46B EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xE64D77C6 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xE9C66CCF EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xFF14B941 EQ PUSH2 0x302 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A1 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH31 0x1000000000000000000000000000000000000000000000000000000000000 MUL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH31 0x1000000000000000000000000000000000000000000000000000000000000 MUL PUSH31 0x1000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL SWAP1 POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 NUMBER 0xe5 0xd2 SWAP13 SHR 0x1e 0xbc SWAP8 0xe5 0xaf DELEGATECALL SLT RETURNDATASIZE DUP16 BYTE CALL 0xdf PUSH32 0x96D1DF56E6329B9E10B740747091002900000000000000000000000000000000 ",
							"sourceMap": "26:975:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;654:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;654:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;285:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;285:94:0;;;;;;;;;;;;;;;;;;;;;;;909:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;909:89:0;;;;;;;;;;;;;;;;;;;;;;;733:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;733:91:0;;;;;;;;;;;;;;;;;;;;;;;480:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;480:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;830;;8:9:-1;5:2;;;30:1;27;20:12;5:2;830:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;385:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;385:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;559:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;559:89:0;;;;;;;;;;;;;;;;;;;;;;;193:86;;8:9:-1;5:2;;;30:1;27;20:12;5:2;193:86:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;654:73;691:6;716:2;;;;;;;;;;;709:9;;654:73;:::o;285:94::-;321:4;350:2;;;;;;;;;;;344:9;;;337:16;;;;285:94;:::o;909:89::-;945:4;974:2;;;;;;;;;;;968:9;;;961:16;;;;909:89;:::o;733:91::-;769:4;799:2;;;;;;;;;;;792:10;;;785:17;;;;733:91;:::o;480:73::-;517:6;542:2;;;;;;;;;;;535:9;;480:73;:::o;830:::-;867:6;892:2;;;;;;;;;;;885:9;;;;;830:73;:::o;385:87::-;422:6;447:2;;;;;;;;;;;440:9;;385:87;:::o;559:89::-;595:4;624:2;;;;;;;;;;;618:9;;;611:16;;;;559:89;:::o;193:86::-;229:6;254:2;;;;;;;;;;;247:9;;193:86;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "317200",
								"executionCost": "81617",
								"totalCost": "398817"
							},
							"external": {
								"getbyteaa()": "590",
								"getbytebb()": "596",
								"getbytecc()": "508",
								"getbytedd()": "627",
								"getintaa()": "479",
								"getintbb()": "661",
								"getintcc()": "573",
								"getintdd()": "551",
								"getintff()": "684"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 1001,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 26,
									"end": 1001,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 26,
									"end": 1001,
									"name": "MSTORE"
								},
								{
									"begin": 67,
									"end": 71,
									"name": "PUSH",
									"value": "65"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "PUSH",
									"value": "100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "MUL"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "DUP1"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "EXP"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "DUP2"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "SLOAD"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "DUP2"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "MUL"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "NOT"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "AND"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "SWAP1"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "DUP4"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "PUSH",
									"value": "100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "SWAP1"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "DIV"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "MUL"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "OR"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "SWAP1"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "SSTORE"
								},
								{
									"begin": 55,
									"end": 71,
									"name": "POP"
								},
								{
									"begin": 103,
									"end": 105,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 90,
									"end": 107,
									"name": "PUSH",
									"value": "100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 107,
									"name": "MUL"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "EXP"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "DUP2"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "SLOAD"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "DUP2"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "MUL"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "NOT"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "AND"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "SWAP1"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "DUP4"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "PUSH",
									"value": "100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "SWAP1"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "DIV"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "MUL"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "OR"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "SWAP1"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "SSTORE"
								},
								{
									"begin": 78,
									"end": 107,
									"name": "POP"
								},
								{
									"begin": 140,
									"end": 143,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 126,
									"end": 145,
									"name": "PUSH",
									"value": "1000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 145,
									"name": "MUL"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "EXP"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "DUP2"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "SLOAD"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "DUP2"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "PUSH",
									"value": "FFFF"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "MUL"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "NOT"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "AND"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "SWAP1"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "DUP4"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "PUSH",
									"value": "1000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "SWAP1"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "DIV"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "MUL"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "OR"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "SWAP1"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "SSTORE"
								},
								{
									"begin": 114,
									"end": 145,
									"name": "POP"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "PUSH",
									"value": "6100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "EXP"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "DUP2"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "SLOAD"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "DUP2"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "MUL"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "NOT"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "AND"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "SWAP1"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "DUP4"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "PUSH",
									"value": "100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "SWAP1"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "DIV"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "MUL"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "OR"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "SWAP1"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "SSTORE"
								},
								{
									"begin": 152,
									"end": 167,
									"name": "POP"
								},
								{
									"begin": 26,
									"end": 1001,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 26,
									"end": 1001,
									"name": "POP"
								},
								{
									"begin": 26,
									"end": 1001,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 1001,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 1001,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 1001,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 1001,
									"name": "CODECOPY"
								},
								{
									"begin": 26,
									"end": 1001,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 1001,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582043e5d29c1c1ebc97e5aff4123d8f1af1df7f96d1df56e6329b9e10b7407470910029",
									".code": [
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "LT"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "DIV"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "AND"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "6618605"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "13A9CA12"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "3B255757"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "5DD9D8A7"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "7F38A19E"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "D333F46B"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "E64D77C6"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "E9C66CCF"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "FF14B941"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 1001,
											"name": "REVERT"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "JUMPDEST"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "POP"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "JUMP"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "JUMPDEST"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "MLOAD"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "DUP1"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "DUP3"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "NOT"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "AND"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "NOT"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "AND"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "DUP2"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "MSTORE"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "ADD"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "SWAP2"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "POP"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "POP"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "MLOAD"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "DUP1"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "SWAP2"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "SUB"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "SWAP1"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "RETURN"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "JUMP"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "MLOAD"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "DUP3"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "MSTORE"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "ADD"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "SWAP2"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "MLOAD"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "SWAP2"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "SUB"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "RETURN"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "JUMPDEST"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "JUMP"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "JUMPDEST"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "MLOAD"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "DUP3"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "DUP2"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "MSTORE"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "ADD"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "SWAP2"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "MLOAD"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "SWAP2"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "SUB"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "RETURN"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "JUMPDEST"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "POP"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "JUMP"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "JUMPDEST"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "MLOAD"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "DUP1"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "DUP3"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "DUP2"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "MSTORE"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "ADD"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "SWAP2"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "POP"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "POP"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "MLOAD"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "DUP1"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "SWAP2"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "SUB"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "RETURN"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "JUMPDEST"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "POP"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "JUMP"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "JUMPDEST"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "MLOAD"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "DUP1"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "DUP3"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "NOT"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "AND"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "NOT"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "AND"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "DUP2"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "MSTORE"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "ADD"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "SWAP2"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "POP"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "POP"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "MLOAD"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "DUP1"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "SWAP2"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "SUB"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "SWAP1"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "RETURN"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "JUMPDEST"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "JUMP"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "JUMPDEST"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "MLOAD"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "DUP1"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "DUP3"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "NOT"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "AND"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "NOT"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "AND"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "DUP2"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "MSTORE"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "ADD"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "SWAP2"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "MLOAD"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "DUP1"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "SWAP2"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "SUB"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "SWAP1"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "RETURN"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "JUMP"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "MLOAD"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "DUP3"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "NOT"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "AND"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "NOT"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "AND"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "DUP2"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "MSTORE"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "ADD"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "SWAP2"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "MLOAD"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "SWAP2"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "SUB"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "RETURN"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "JUMP"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "MLOAD"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "DUP3"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "SWAP2"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "MLOAD"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "SWAP2"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "SUB"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "SWAP1"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "RETURN"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "JUMP"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "DUP3"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "NOT"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "AND"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "NOT"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "AND"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "RETURN"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "JUMPDEST"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 716,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 716,
											"end": 718,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 716,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 716,
											"end": 718,
											"name": "SLOAD"
										},
										{
											"begin": 716,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 716,
											"end": 718,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 716,
											"end": 718,
											"name": "EXP"
										},
										{
											"begin": 716,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 716,
											"end": 718,
											"name": "DIV"
										},
										{
											"begin": 716,
											"end": 718,
											"name": "PUSH",
											"value": "1000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 716,
											"end": 718,
											"name": "MUL"
										},
										{
											"begin": 709,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 709,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "SWAP1"
										},
										{
											"begin": 654,
											"end": 727,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "DUP1"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "SWAP1"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "SLOAD"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "SWAP1"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "EXP"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "SWAP1"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "DIV"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "MUL"
										},
										{
											"begin": 344,
											"end": 353,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 344,
											"end": 353,
											"name": "SWAP1"
										},
										{
											"begin": 344,
											"end": 353,
											"name": "DIV"
										},
										{
											"begin": 337,
											"end": 353,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 337,
											"end": 353,
											"name": "AND"
										},
										{
											"begin": 337,
											"end": 353,
											"name": "SWAP1"
										},
										{
											"begin": 337,
											"end": 353,
											"name": "POP"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 285,
											"end": 379,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "JUMPDEST"
										},
										{
											"begin": 945,
											"end": 949,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "DUP1"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "SLOAD"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "EXP"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "DIV"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "MUL"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "DIV"
										},
										{
											"begin": 961,
											"end": 977,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 961,
											"end": 977,
											"name": "AND"
										},
										{
											"begin": 961,
											"end": 977,
											"name": "SWAP1"
										},
										{
											"begin": 961,
											"end": 977,
											"name": "POP"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 998,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 799,
											"end": 801,
											"name": "DUP1"
										},
										{
											"begin": 799,
											"end": 801,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 799,
											"end": 801,
											"name": "SWAP1"
										},
										{
											"begin": 799,
											"end": 801,
											"name": "SLOAD"
										},
										{
											"begin": 799,
											"end": 801,
											"name": "SWAP1"
										},
										{
											"begin": 799,
											"end": 801,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 799,
											"end": 801,
											"name": "EXP"
										},
										{
											"begin": 799,
											"end": 801,
											"name": "SWAP1"
										},
										{
											"begin": 799,
											"end": 801,
											"name": "DIV"
										},
										{
											"begin": 799,
											"end": 801,
											"name": "PUSH",
											"value": "1000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 799,
											"end": 801,
											"name": "MUL"
										},
										{
											"begin": 792,
											"end": 802,
											"name": "PUSH",
											"value": "1000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 792,
											"end": 802,
											"name": "SWAP1"
										},
										{
											"begin": 792,
											"end": 802,
											"name": "DIV"
										},
										{
											"begin": 785,
											"end": 802,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 785,
											"end": 802,
											"name": "AND"
										},
										{
											"begin": 785,
											"end": 802,
											"name": "SWAP1"
										},
										{
											"begin": 785,
											"end": 802,
											"name": "POP"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 824,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "JUMPDEST"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "SLOAD"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "EXP"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "DIV"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "MUL"
										},
										{
											"begin": 535,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 535,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "SWAP1"
										},
										{
											"begin": 480,
											"end": 553,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "JUMPDEST"
										},
										{
											"begin": 867,
											"end": 873,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 892,
											"end": 894,
											"name": "DUP1"
										},
										{
											"begin": 892,
											"end": 894,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 892,
											"end": 894,
											"name": "SWAP1"
										},
										{
											"begin": 892,
											"end": 894,
											"name": "SLOAD"
										},
										{
											"begin": 892,
											"end": 894,
											"name": "SWAP1"
										},
										{
											"begin": 892,
											"end": 894,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 892,
											"end": 894,
											"name": "EXP"
										},
										{
											"begin": 892,
											"end": 894,
											"name": "SWAP1"
										},
										{
											"begin": 892,
											"end": 894,
											"name": "DIV"
										},
										{
											"begin": 892,
											"end": 894,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 892,
											"end": 894,
											"name": "MUL"
										},
										{
											"begin": 885,
											"end": 894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 894,
											"name": "NOT"
										},
										{
											"begin": 885,
											"end": 894,
											"name": "AND"
										},
										{
											"begin": 885,
											"end": 894,
											"name": "SWAP1"
										},
										{
											"begin": 885,
											"end": 894,
											"name": "POP"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "SWAP1"
										},
										{
											"begin": 830,
											"end": 903,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "JUMPDEST"
										},
										{
											"begin": 422,
											"end": 428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 447,
											"end": 449,
											"name": "DUP1"
										},
										{
											"begin": 447,
											"end": 449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 447,
											"end": 449,
											"name": "SWAP1"
										},
										{
											"begin": 447,
											"end": 449,
											"name": "SLOAD"
										},
										{
											"begin": 447,
											"end": 449,
											"name": "SWAP1"
										},
										{
											"begin": 447,
											"end": 449,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 447,
											"end": 449,
											"name": "EXP"
										},
										{
											"begin": 447,
											"end": 449,
											"name": "SWAP1"
										},
										{
											"begin": 447,
											"end": 449,
											"name": "DIV"
										},
										{
											"begin": 447,
											"end": 449,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 447,
											"end": 449,
											"name": "MUL"
										},
										{
											"begin": 440,
											"end": 449,
											"name": "SWAP1"
										},
										{
											"begin": 440,
											"end": 449,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 472,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 599,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "DUP1"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "SWAP1"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "SLOAD"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "SWAP1"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "EXP"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "SWAP1"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "DIV"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "MUL"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "SWAP1"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "DIV"
										},
										{
											"begin": 611,
											"end": 627,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 611,
											"end": 627,
											"name": "AND"
										},
										{
											"begin": 611,
											"end": 627,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 627,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "SWAP1"
										},
										{
											"begin": 559,
											"end": 648,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "JUMPDEST"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 254,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 254,
											"end": 256,
											"name": "SLOAD"
										},
										{
											"begin": 254,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 254,
											"end": 256,
											"name": "EXP"
										},
										{
											"begin": 254,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DIV"
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 254,
											"end": 256,
											"name": "MUL"
										},
										{
											"begin": 247,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 247,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 279,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getbyteaa()": "e64d77c6",
							"getbytebb()": "7f38a19e",
							"getbytecc()": "06618605",
							"getbytedd()": "d333f46b",
							"getintaa()": "13a9ca12",
							"getintbb()": "e9c66ccf",
							"getintcc()": "5dd9d8a7",
							"getintdd()": "3b255757",
							"getintff()": "ff14b941"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"getbytecc\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes2\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getintaa\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getintdd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getintcc\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getbytebb\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes1\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getbytedd\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes2\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getbyteaa\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes1\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getintbb\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getintff\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes1\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/test2.sol\":\"BytesContract\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test2.sol\":{\"keccak256\":\"0xbda6cab614254b63fe989c942a52193fc6f2f37f68bf663762351f86e7b85bb5\",\"urls\":[\"bzzr://8e7697c5c70b0c4640fb8e7eb5365cec298e85eadd493b50e4f66b254b763770\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/test2.sol:9:5: Warning: Function state mutability can be restricted to view\n    function getintff() public returns (bytes1){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 279,
					"file": "contracts/test2.sol",
					"start": 193
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/test2.sol:12:5: Warning: Function state mutability can be restricted to view\n    function getintaa() public returns (uint){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 379,
					"file": "contracts/test2.sol",
					"start": 285
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/test2.sol:15:5: Warning: Function state mutability can be restricted to view\n    function getbyteaa() public returns (bytes1){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 472,
					"file": "contracts/test2.sol",
					"start": 385
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/test2.sol:19:5: Warning: Function state mutability can be restricted to view\n    function getbytebb() public returns (bytes1){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 553,
					"file": "contracts/test2.sol",
					"start": 480
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/test2.sol:22:5: Warning: Function state mutability can be restricted to view\n    function getintbb() public returns (uint){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 648,
					"file": "contracts/test2.sol",
					"start": 559
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/test2.sol:25:5: Warning: Function state mutability can be restricted to view\n    function getbytecc() public returns (bytes2){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 727,
					"file": "contracts/test2.sol",
					"start": 654
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/test2.sol:28:5: Warning: Function state mutability can be restricted to view\n    function getintcc() public returns (uint){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 824,
					"file": "contracts/test2.sol",
					"start": 733
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/test2.sol:31:5: Warning: Function state mutability can be restricted to view\n    function getbytedd() public returns (bytes2){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 903,
					"file": "contracts/test2.sol",
					"start": 830
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/test2.sol:34:5: Warning: Function state mutability can be restricted to view\n    function getintdd() public returns (uint){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 998,
					"file": "contracts/test2.sol",
					"start": 909
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/test2.sol": {
				"ast": {
					"absolutePath": "contracts/test2.sol",
					"exportedSymbols": {
						"BytesContract": [
							104
						]
					},
					"id": 105,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104
							],
							"name": "BytesContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"name": "aa",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "55:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes1",
										"typeString": "bytes1"
									},
									"typeName": {
										"id": 2,
										"name": "bytes1",
										"nodeType": "ElementaryTypeName",
										"src": "55:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783635",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "67:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_101_by_1",
											"typeString": "int_const 101"
										},
										"value": "0x65"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 11,
									"name": "bb",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "78:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes1",
										"typeString": "bytes1"
									},
									"typeName": {
										"id": 5,
										"name": "bytes1",
										"nodeType": "ElementaryTypeName",
										"src": "78:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "103:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														}
													],
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "97:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint8_$",
														"typeString": "type(uint8)"
													},
													"typeName": "uint8"
												},
												"id": 9,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "97:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											],
											"id": 6,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "90:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes1_$",
												"typeString": "type(bytes1)"
											},
											"typeName": "bytes1"
										},
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "90:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"name": "cc",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "114:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes2",
										"typeString": "bytes2"
									},
									"typeName": {
										"id": 12,
										"name": "bytes2",
										"nodeType": "ElementaryTypeName",
										"src": "114:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes2",
											"typeString": "bytes2"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"hexValue": "323536",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "140:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "256"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														}
													],
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "133:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint16_$",
														"typeString": "type(uint16)"
													},
													"typeName": "uint16"
												},
												"id": 16,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "133:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											],
											"id": 13,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "126:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes2_$",
												"typeString": "type(bytes2)"
											},
											"typeName": "bytes2"
										},
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "126:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes2",
											"typeString": "bytes2"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 21,
									"name": "dd",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "152:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes1",
										"typeString": "bytes1"
									},
									"typeName": {
										"id": 19,
										"name": "bytes1",
										"nodeType": "ElementaryTypeName",
										"src": "152:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "61",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "164:3:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
											"typeString": "literal_string \"a\""
										},
										"value": "a"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 23,
									"name": "ff",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "174:9:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes1",
										"typeString": "bytes1"
									},
									"typeName": {
										"id": 22,
										"name": "bytes1",
										"nodeType": "ElementaryTypeName",
										"src": "174:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "236:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"name": "ff",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "254:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"functionReturnParameters": 27,
												"id": 29,
												"nodeType": "Return",
												"src": "247:9:0"
											}
										]
									},
									"documentation": null,
									"id": 31,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getintff",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "229:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 25,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "229:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "228:8:0"
									},
									"scope": 104,
									"src": "193:86:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "326:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 37,
															"name": "aa",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "350:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														],
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "344:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": "uint8"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "344:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 35,
												"id": 39,
												"nodeType": "Return",
												"src": "337:16:0"
											}
										]
									},
									"documentation": null,
									"id": 41,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getintaa",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "321:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "321:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "320:6:0"
									},
									"scope": 104,
									"src": "285:94:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "429:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 46,
													"name": "aa",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "447:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"functionReturnParameters": 45,
												"id": 47,
												"nodeType": "Return",
												"src": "440:9:0"
											}
										]
									},
									"documentation": null,
									"id": 49,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getbyteaa",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "422:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 43,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "422:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "421:8:0"
									},
									"scope": 104,
									"src": "385:87:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "524:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 54,
													"name": "bb",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "542:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"functionReturnParameters": 53,
												"id": 55,
												"nodeType": "Return",
												"src": "535:9:0"
											}
										]
									},
									"documentation": null,
									"id": 57,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getbytebb",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "517:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 51,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "517:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "516:8:0"
									},
									"scope": 104,
									"src": "480:73:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "600:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 63,
															"name": "bb",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "624:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														],
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "618:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": "uint8"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "618:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 61,
												"id": 65,
												"nodeType": "Return",
												"src": "611:16:0"
											}
										]
									},
									"documentation": null,
									"id": 67,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getintbb",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "576:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "595:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "595:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "594:6:0"
									},
									"scope": 104,
									"src": "559:89:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "698:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 72,
													"name": "cc",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "716:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes2",
														"typeString": "bytes2"
													}
												},
												"functionReturnParameters": 71,
												"id": 73,
												"nodeType": "Return",
												"src": "709:9:0"
											}
										]
									},
									"documentation": null,
									"id": 75,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getbytecc",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "691:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												},
												"typeName": {
													"id": 69,
													"name": "bytes2",
													"nodeType": "ElementaryTypeName",
													"src": "691:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes2",
														"typeString": "bytes2"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "690:8:0"
									},
									"scope": 104,
									"src": "654:73:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "774:50:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 81,
															"name": "cc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "799:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes2",
																"typeString": "bytes2"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes2",
																"typeString": "bytes2"
															}
														],
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "792:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": "uint16"
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "792:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 79,
												"id": 83,
												"nodeType": "Return",
												"src": "785:17:0"
											}
										]
									},
									"documentation": null,
									"id": 85,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getintcc",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "750:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "769:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "769:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "768:6:0"
									},
									"scope": 104,
									"src": "733:91:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "874:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 90,
													"name": "dd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 21,
													"src": "892:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"functionReturnParameters": 89,
												"id": 91,
												"nodeType": "Return",
												"src": "885:9:0"
											}
										]
									},
									"documentation": null,
									"id": 93,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getbytedd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "848:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "867:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												},
												"typeName": {
													"id": 87,
													"name": "bytes2",
													"nodeType": "ElementaryTypeName",
													"src": "867:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes2",
														"typeString": "bytes2"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "866:8:0"
									},
									"scope": 104,
									"src": "830:73:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "950:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 99,
															"name": "dd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "974:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														],
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "968:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": "uint8"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "968:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 97,
												"id": 101,
												"nodeType": "Return",
												"src": "961:16:0"
											}
										]
									},
									"documentation": null,
									"id": 103,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getintdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "945:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "945:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "944:6:0"
									},
									"scope": 104,
									"src": "909:89:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 105,
							"src": "26:975:0"
						}
					],
					"src": "0:1003:0"
				},
				"id": 0
			}
		}
	}
}